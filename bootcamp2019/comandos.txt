yarn init -y
code .
yarn add express
node src/server.js 
yarn add sucrase nodemon -D
criar nodemon.json na raiz do projeto
criar os scripts dev e dev:debun no package.json
yarn sucrase-node src/server.js 
yarn dev
yarn dev:debug

----------------------------------------------DOCKER---------------------------------------------------------------------------------------------------
docker run --name database -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres:11
docker ps
instalar postbird
login e senha -> database, docker
criar banco gobarber
docker stop database
docker ps -a
docker start database
docker logs database
----------------------------------------------SEQUELIZE------------------------------------------------------------------------------------------------
ORM -> Abstração do banco de dados
MIGRATIONS -> Controle de versão para base de dados
SEEDS -> População da base de dadospara desenvolvimento
----------------------------------------------MVC------------------------------------------------------------------------------------------------------
MODEL -> Armazena a abstração do banco, manipula os dados contidos nas tabelas do banco. Não possuem responsabilidadessobre a regra de negócio
CONTROLLER -> Ponto de entrada das requisições, uma rota geralmente estáassociada diretamente com um métododo controller.
VIEW -> Retorno ao cliente, nesse caso JSON que será retornadoao front-end.

cada entidade tem um Controller.
----------------------------------------------ESLINT, PRETTIER, EDITORCONFIG---------------------------------------------------------------------------
yarn add eslint -D
yarn eslint --init
instalar no vsCode o plugon eslint
editar o arquivo .eslintrc
editar o arquivo settings.json
deletar o lock.json gerado
yarn
yarn add prettier eslint-config-prettier eslint-plugin-prettier -D
yarn eslint --fix src --ext .js
baixar no vscode o plugin editorconfig
editar o arquivo .editorconfig
